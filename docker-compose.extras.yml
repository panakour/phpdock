#this compose file contains extra services and should be combined with docker-compose.yml
services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ${DATA_PATH_HOST}/mongodb:/data/db

  redis:
    image: redis:latest
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "6379:6379"

  memcached:
    image: memcached:latest
    volumes:
      - ${DATA_PATH_HOST}/memcached:/var/lib/memcached
    ports:
      - "11211:11211"

  tor:
    image: dperson/torproxy
    ports:
      - 8118:8118
      - 9050:9050

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.26
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - cluster.routing.allocation.disk.watermark.flood_stage=95%
      - cluster.routing.allocation.disk.watermark.high=90%
      - cluster.routing.allocation.disk.watermark.low=85%
      - cluster.info.update.interval=1m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9201:9200"
      - "9301:9300"


  elasticsearch8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"

  opensearch:
    image: opensearchproject/opensearch:2
    ports:
      - '9202:9200'
    environment:
      discovery.type: single-node
      plugins.security.disabled: 'true'
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: fooOpensearch!Pass1234

  chromium:
    image: montferret/chromium
    ports:
      - "9222:9222"

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ${DATA_PATH_HOST}/jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  mailhog:
    image: mailhog:local
    build: https://github.com/mailhog/MailHog.git
    ports:
      - '1025:1025'
      - '8025:8025'

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - '1025:1025'
      - '8025:8025'

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data

  php-fpm7.3:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=7.3
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  php-fpm7.4:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=7.4
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  php-fpm8.0:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=8.0
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  php-fpm8.1:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=8.1
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  php-fpm8.2:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=8.2
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  php-fpm8.3:
    build:
      context: .
      target: php
      args:
        - PHP_VERSION=8.3
        - PHP_EXTENSIONS=${PHP_EXTENSIONS}
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    environment:
      - XDEBUG_CLIENT_HOST=${XDEBUG_CLIENT_HOST}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}

  phpactor:
    build:
      context: .
      dockerfile: Dockerfile.phpactor
    volumes:
      - /Users/panakour/Code:/Users/panakour/Code
    ports:
      - "9090:9090"
    tty: true